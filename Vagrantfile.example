# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "debian/buster64"
  vmname = "basil"

  config.vm.hostname = "#{vmname}"
  config.vm.network "public_network"
  config.vm.synced_folder "./", "/opt/basil/"

  required_plugins = %w( vagrant-vbguest )
  required_plugins.each do |plugin| 
  unless Vagrant.has_plugin? plugin
      system "vagrant plugin install #{plugin}"
    end
  end

  config.vm.provider "virtualbox" do |vb|
      vb.memory = "2048"
      vb.cpus = 2
      vb.name = "#{vmname}"
  end

  $script = <<-SCRIPT
  sudo su -
  apt-get update
  apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common
  curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -
  add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"
  apt-get update
  apt-get install -y docker-ce docker-ce-cli containerd.io
  curl -sL https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
  chmod +x /usr/local/bin/docker-compose

  # for image in /opt/basil/docker_images/*; do docker load -i $image; done

  cd /opt/basil
  if [ ! -f docker-compose.yml ]; then cp docker-compose.dev.example.yml docker-compose.yml; fi
  docker-compose up -d basil-postgres
  docker-compose up -d basil-core
  docker-compose up -d basil-nginx
  docker exec basil-core python ./manage.py migrate
  docker exec basil-core python ./manage.py collectstatic --noinput
  docker exec basil-core python ./manage.py import_users
  SCRIPT

  config.vm.provision "shell", preserve_order: true, inline: $script
end
